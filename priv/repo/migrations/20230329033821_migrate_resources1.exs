defmodule MyApp.Repo.Migrations.MigrateResources1 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:employee, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :employee_id, :text, null: false
      add :name, :text, null: false
      add :position, :text, null: false
      add :start_date, :date, null: false
      add :end_date, :date
      add :salary, :decimal
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :department_id, :uuid, null: false
    end

    create table(:department, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
    end

    alter table(:employee) do
      modify :department_id,
             references(:department,
               column: :id,
               prefix: "public",
               name: "employee_department_id_fkey",
               type: :uuid
             )
    end

    alter table(:department) do
      add :name, :text, null: false
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end
  end

  def down do
    alter table(:department) do
      remove :updated_at
      remove :created_at
      remove :name
    end

    drop constraint(:employee, "employee_department_id_fkey")

    alter table(:employee) do
      modify :department_id, :uuid
    end

    drop table(:department)

    drop table(:employee)
  end
end